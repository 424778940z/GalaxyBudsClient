using System;
using System.Collections.Immutable;
using System.Linq;
using GalaxyBudsClient.Generators.Utils;

namespace GalaxyBudsClient.Generators.Enums;

public static class RootSourceGenerationHelper
{
    public static string GenerateClass(ImmutableArray<EnumToGenerate?> enumsToGenerate)
    {
        
        var gen = new CodeGenerator();
        gen.AppendLines("""
                       // <auto-generated/>
                       #nullable enable

                       using System;
                       
                       namespace GalaxyBudsClient.Generated.Enums;
                       
                       """);
        
        gen.EnterScope("public static class CompiledEnums");
        
        // GetValuesByType
        gen.AppendLines("""
                        /// <summary>Returns all values of the specified enum type.</summary>
                        /// <param name="type">Type instance of the enum</param>
                        /// <returns>Array of enum values as a boxed object</returns>
                        /// <exception cref="ArgumentOutOfRangeException">Thrown when the enum type is unknown</exception>
                        """);
        gen.EnterScope("public static object GetValuesByType(global::System.Type type)");
        gen.EnterScope($"return type.FullName switch");

        foreach (var enumToGenerate in enumsToGenerate.Cast<EnumToGenerate>())
        {
            gen.AppendLine($"""
                           "{enumToGenerate.FullyQualifiedName}" => (object)global::{enumToGenerate.FullyQualifiedName}Extensions.GetValues(),
                           """);
        }

        gen.AppendLine("""
                       _ => throw new global::System.ArgumentOutOfRangeException(nameof(type), $"Unknown enum type '{type.FullName}'. Make sure to use the [CompiledEnum] attribute.")
                       """);
        gen.LeaveScope(";");
        gen.LeaveScope();
        
        
        // GetNamesByType
        gen.AppendLines("""
                        /// <summary>Returns all names of the specified enum type.</summary>
                        /// <param name="type">Type instance of the enum</param>
                        /// <returns>Array of enum names</returns>
                        /// <exception cref="ArgumentOutOfRangeException">Thrown when the enum type is unknown</exception>
                        """);
        gen.EnterScope("public static string[] GetNamesByType(global::System.Type type)");
        gen.EnterScope($"return type.FullName switch");

        foreach (var enumToGenerate in enumsToGenerate.Cast<EnumToGenerate>())
        {
            gen.AppendLine($"""
                            "{enumToGenerate.FullyQualifiedName}" => global::{enumToGenerate.FullyQualifiedName}Extensions.GetNames(),
                            """);
        }

        gen.AppendLine("""
                       _ => throw new global::System.ArgumentOutOfRangeException(nameof(type), $"Unknown enum type '{type.FullName}'. Make sure to use the [CompiledEnum] attribute.")
                       """);
        gen.LeaveScope(";");
        gen.LeaveScope();
        
        gen.LeaveScope();
        
        return gen.ToString();
    }
}
